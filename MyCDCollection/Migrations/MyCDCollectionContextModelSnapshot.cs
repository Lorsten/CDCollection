// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCDCollection.Data;

namespace MyCDCollection.Migrations
{
    [DbContext(typeof(MyCDCollectionContext))]
    partial class MyCDCollectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCDCollection.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistID");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("MyCDCollection.Models.CD", b =>
                {
                    b.Property<int>("CDID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistNameID")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CDID");

                    b.HasIndex("ArtistNameID");

                    b.ToTable("CD");
                });

            modelBuilder.Entity("MyCDCollection.Models.CDLended", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CDSID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Lended")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PersonID");

                    b.HasIndex("CDSID")
                        .IsUnique();

                    b.ToTable("LendedCDS");
                });

            modelBuilder.Entity("MyCDCollection.Models.CD", b =>
                {
                    b.HasOne("MyCDCollection.Models.Artist", "Artist")
                        .WithMany("CDS")
                        .HasForeignKey("ArtistNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MyCDCollection.Models.CDLended", b =>
                {
                    b.HasOne("MyCDCollection.Models.CD", "CDs")
                        .WithOne("Name")
                        .HasForeignKey("MyCDCollection.Models.CDLended", "CDSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CDs");
                });

            modelBuilder.Entity("MyCDCollection.Models.Artist", b =>
                {
                    b.Navigation("CDS");
                });

            modelBuilder.Entity("MyCDCollection.Models.CD", b =>
                {
                    b.Navigation("Name");
                });
#pragma warning restore 612, 618
        }
    }
}
